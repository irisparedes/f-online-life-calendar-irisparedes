{"ast":null,"code":"import _objectWithoutProperties from \"/Users/macbook/Iris/f-online-life-calendar-irisparedes/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/macbook/Iris/f-online-life-calendar-irisparedes/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Calendar from '../components/Calendar/calendar';\nimport Edit from '../components/Edit/edit';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTodaysDate = () => {\n      let today = new Date();\n      const dd = today.getDate();\n      const mm = today.getMonth() + 1;\n      const yyyy = today.getFullYear();\n      today = \"\".concat(yyyy, \"-\").concat(mm, \"-\").concat(dd);\n      this.setState({\n        today\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.target.id === 'inputDate' && this.checkIfDateIsAlreadyInserted(event.target.value)) {\n        return '';\n      } else {\n        if (event.target.id.includes('inputStatus')) {\n          this.setState({\n            inputStatus: event.target.labels[0].innerHTML\n          });\n        } else {\n          this.setState({\n            [event.target.id]: event.target.value\n          });\n        }\n      }\n    };\n\n    this.checkIfDateIsAlreadyInserted = date => {\n      for (const input of this.state.calendarData) {\n        if (input.date === date) {\n          alert('Ya has registrado esa fecha');\n          return true;\n        }\n      }\n    };\n\n    this.saveNewStatus = () => {\n      const _this$state = this.state,\n            calendarData = _this$state.calendarData,\n            inputDate = _this$state.inputDate,\n            inputStatus = _this$state.inputStatus,\n            inputMessage = _this$state.inputMessage;\n      this.setState({\n        calendarData: [...calendarData, {\n          date: inputDate,\n          status: inputStatus,\n          message: inputMessage || null\n        }]\n      });\n      this.clearNewData();\n    };\n\n    this.clearNewData = () => {\n      this.setState({\n        inputDate: null,\n        inputStatus: null,\n        inputMessage: null\n      });\n    };\n\n    this.state = {\n      calendarData: [],\n      inputDate: null,\n      inputStatus: null,\n      inputMessage: null,\n      today: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTodaysDate();\n\n    if (localStorage.getItem('Happiness Calendar')) {\n      this.setState({\n        calendarData: JSON.parse(localStorage.getItem('Happiness Calendar'))\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.calendarData !== this.state.calendarData) {\n      localStorage.setItem('Happiness Calendar', JSON.stringify(this.state.calendarData));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          calendarData = _this$state2.calendarData,\n          state = _objectWithoutProperties(_this$state2, [\"calendarData\"]);\n\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Calendar, {\n        calendarData: calendarData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/new\",\n      render: () => React.createElement(Edit, Object.assign({\n        handleChange: this.handleChange,\n        saveNewStatus: this.saveNewStatus,\n        clearNewData: this.clearNewData\n      }, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Iris/f-online-life-calendar-irisparedes/src/App/App.js"],"names":["React","Component","Route","Switch","Calendar","Edit","App","constructor","props","getTodaysDate","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","setState","handleChange","event","target","id","checkIfDateIsAlreadyInserted","value","includes","inputStatus","labels","innerHTML","date","input","state","calendarData","alert","saveNewStatus","inputDate","inputMessage","status","message","clearNewData","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,KAAV,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAAEC,KAAF,EAAU;AACnB,UAAOA,KAAP;;AADmB,SAqBrBC,aArBqB,GAqBL,MAAM;AACpB,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,YAAMC,EAAE,GAAGF,KAAK,CAACG,OAAN,EAAX;AACA,YAAMC,EAAE,GAAGJ,KAAK,CAACK,QAAN,KAAiB,CAA5B;AACA,YAAMC,IAAI,GAAGN,KAAK,CAACO,WAAN,EAAb;AACAP,MAAAA,KAAK,aAAMM,IAAN,cAAcF,EAAd,cAAoBF,EAApB,CAAL;AACA,WAAKM,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KA5BoB;;AAAA,SA8BrBS,YA9BqB,GA8BNC,KAAK,IAAI;AACtB,UAAKA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,WAApB,IAAmC,KAAKC,4BAAL,CAAkCH,KAAK,CAACC,MAAN,CAAaG,KAA/C,CAAxC,EAAgG;AAC9F,eAAO,EAAP;AACD,OAFD,MAEO;AACL,YAAKJ,KAAK,CAACC,MAAN,CAAaC,EAAb,CAAgBG,QAAhB,CAAyB,aAAzB,CAAL,EAA+C;AAChD,eAAKP,QAAL,CAAc;AACVQ,YAAAA,WAAW,EAAEN,KAAK,CAACC,MAAN,CAAaM,MAAb,CAAoB,CAApB,EAAuBC;AAD1B,WAAd;AAGE,SAJD,MAIO;AACL,eAAKV,QAAL,CAAc;AACZ,aAAEE,KAAK,CAACC,MAAN,CAAaC,EAAf,GAAqBF,KAAK,CAACC,MAAN,CAAaG;AADtB,WAAd;AAGD;AACF;AACF,KA5CoB;;AAAA,SA8CrBD,4BA9CqB,GA8CUM,IAAI,IAAI;AACrC,WAAM,MAAMC,KAAZ,IAAqB,KAAKC,KAAL,CAAWC,YAAhC,EAA+C;AAC7C,YAAKF,KAAK,CAACD,IAAN,KAAeA,IAApB,EAA2B;AACzBI,UAAAA,KAAK,CAAE,6BAAF,CAAL;AACA,iBAAO,IAAP;AACD;AACF;AACF,KArDoB;;AAAA,SAuDrBC,aAvDqB,GAuDL,MAAM;AAAA,0BAC4C,KAAKH,KADjD;AAAA,YACZC,YADY,eACZA,YADY;AAAA,YACGG,SADH,eACGA,SADH;AAAA,YACcT,WADd,eACcA,WADd;AAAA,YAC2BU,YAD3B,eAC2BA,YAD3B;AAEpB,WAAKlB,QAAL,CAAc;AACZc,QAAAA,YAAY,EAAE,CAAE,GAAGA,YAAL,EACZ;AACEH,UAAAA,IAAI,EAAEM,SADR;AAEEE,UAAAA,MAAM,EAAEX,WAFV;AAGEY,UAAAA,OAAO,EAAEF,YAAY,IAAI;AAH3B,SADY;AADF,OAAd;AASA,WAAKG,YAAL;AACD,KAnEoB;;AAAA,SA2ErBA,YA3EqB,GA2EN,MAAM;AACnB,WAAKrB,QAAL,CAAc;AACZiB,QAAAA,SAAS,EAAE,IADC;AAEZT,QAAAA,WAAW,EAAE,IAFD;AAGZU,QAAAA,YAAY,EAAE;AAHF,OAAd;AAKD,KAjFoB;;AAGnB,SAAKL,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXG,MAAAA,SAAS,EAAE,IAFA;AAGXT,MAAAA,WAAW,EAAE,IAHF;AAIXU,MAAAA,YAAY,EAAE,IAJH;AAKX1B,MAAAA,KAAK,EAAE;AALI,KAAb;AAOD;;AAED8B,EAAAA,iBAAiB,GAAG;AAClB,SAAK/B,aAAL;;AACA,QAAIgC,YAAY,CAACC,OAAb,CAAsB,oBAAtB,CAAJ,EAAkD;AAChD,WAAKxB,QAAL,CAAc;AACZc,QAAAA,YAAY,EAAGW,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAsB,oBAAtB,CAAX;AADH,OAAd;AAGD;AACF;;AAkDDG,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAyB;AACzC,QAAKA,SAAS,CAACf,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAA3C,EAA0D;AACxDS,MAAAA,YAAY,CAACO,OAAb,CAAsB,oBAAtB,EAA4CL,IAAI,CAACM,SAAL,CAAgB,KAAKlB,KAAL,CAAWC,YAA3B,CAA5C;AACD;AACF;;AAUDkB,EAAAA,MAAM,GAAG;AAAA,yBAC6B,KAAKnB,KADlC;AAAA,UACCC,YADD,gBACCA,YADD;AAAA,UACmBD,KADnB;;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAG,MAC7B,oBAAC,QAAD;AACE,QAAA,YAAY,EAAKC,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMD,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAG,MACzB,oBAAC,IAAD;AACE,QAAA,YAAY,EAAK,KAAKb,YADxB;AAEE,QAAA,aAAa,EAAK,KAAKe,aAFzB;AAGE,QAAA,YAAY,EAAM,KAAKK;AAHzB,SAIOR,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANC,CAFF,CADF;AAoBD;;AA3GyB;;AA8G5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport  { Route, Switch } from 'react-router-dom';\nimport Calendar from '../components/Calendar/calendar';\nimport Edit from '../components/Edit/edit';\n\n\nclass App extends Component {\n  constructor( props ) {\n    super( props )\n\n    this.state = {\n      calendarData: [],\n      inputDate: null,\n      inputStatus: null,\n      inputMessage: null,\n      today: null\n    }\n  };\n\n  componentDidMount() {\n    this.getTodaysDate();\n    if (localStorage.getItem( 'Happiness Calendar' )) {\n      this.setState({\n        calendarData : JSON.parse(localStorage.getItem( 'Happiness Calendar' )),\n      })\n    }\n  }\n\n  getTodaysDate = () => {\n    let today = new Date();\n    const dd = today.getDate();\n    const mm = today.getMonth()+1;\n    const yyyy = today.getFullYear();\n    today = `${yyyy}-${mm}-${dd}`;\n    this.setState({ today })\n  }\n\n  handleChange = event => {\n    if ( event.target.id === 'inputDate' && this.checkIfDateIsAlreadyInserted(event.target.value) ) {\n      return '';\n    } else {\n      if ( event.target.id.includes('inputStatus') ) {\n\t    this.setState({\n\t        inputStatus: event.target.labels[0].innerHTML\n\t    })\n      } else {\n        this.setState({\n          [ event.target.id ]: event.target.value\n        })\n      }\n    }\n  }\n\n  checkIfDateIsAlreadyInserted = date => {\n    for ( const input of this.state.calendarData ) {\n      if ( input.date === date ) {\n        alert( 'Ya has registrado esa fecha' );\n        return true;\n      }\n    }\n  }\n\n  saveNewStatus = () => {\n    const { calendarData , inputDate, inputStatus, inputMessage } = this.state;\n    this.setState({\n      calendarData: [ ...calendarData,\n        {\n          date: inputDate,\n          status: inputStatus,\n          message: inputMessage || null\n        }\n      ]\n    })\n    this.clearNewData();\n  }\n\n  componentDidUpdate( prevProps, prevState ) {\n    if ( prevState.calendarData !== this.state.calendarData ) {\n      localStorage.setItem( 'Happiness Calendar', JSON.stringify( this.state.calendarData ));\n    }\n  }\n\n  clearNewData = () => {\n    this.setState({\n      inputDate: null,\n      inputStatus: null,\n      inputMessage: null\n    })\n  }\n\n  render() {\n    const { calendarData , ...state } = this.state;\n\n    return (\n      <div className=\"app\">\n\n        <Switch>\n        <Route exact path='/' render={ () =>\n          <Calendar\n            calendarData = { calendarData }\n          /> }\n        />\n\t      <Route path='/new' render={ () =>\n          <Edit\n            handleChange = { this.handleChange }\n            saveNewStatus = { this.saveNewStatus }\n            clearNewData  = { this.clearNewData }\n            { ...state }\n          /> }\n        />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}